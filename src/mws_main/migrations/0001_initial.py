# Generated by Django 5.0.6 on 2024-05-26 20:56

import django.contrib.auth.models
import django.db.models.deletion
import mws_main.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Metadata',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('appearance_metadata', models.JSONField()),
                ('download_bandwidth', models.JSONField()),
            ],
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, verbose_name='service name')),
                ('brief_descrp', models.TextField(help_text='Brief description of the service (What is and main function)', verbose_name='brief description')),
                ('descrp', models.TextField(help_text='General description of the service. Markdown markup available.', verbose_name='description')),
                ('icon', models.ImageField(help_text='Copied from the first package icon.', upload_to=mws_main.models.image_dir_path)),
                ('datetime_published', models.DateTimeField(auto_now_add=True, help_text='Date and time when the service was firstly published.')),
                ('n_downloads', models.PositiveIntegerField(default=0, verbose_name='number of downloads')),
            ],
            options={
                'permissions': [('view_admin_service', 'Can view detailed information of a service')],
            },
        ),
        migrations.CreateModel(
            name='TenantAdmin',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Package',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=60, verbose_name='package name')),
                ('package_file', models.FileField(max_length=150, upload_to=mws_main.models.store_dir_path, verbose_name='package file')),
                ('size', models.BigIntegerField(help_text='Package size')),
                ('package_type', models.CharField(choices=[('APK', 'Android Package (APK)'), ('IPA', 'iOS App (IPA)')], max_length=3)),
                ('date_uploaded', models.DateField(auto_now_add=True, help_text='Date when the package was firstly uploaded.')),
                ('os_name', models.CharField(max_length=75, verbose_name="operative system's name")),
                ('last_version', models.CharField(max_length=25)),
                ('descrp', mws_main.models.DescriptionField(default='', help_text='Describes specific features of this package. For information related to the service, use the description field of the service.', verbose_name='package description')),
                ('service', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mws_main.service')),
            ],
        ),
        migrations.CreateModel(
            name='Developer',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('assigned_services', models.ManyToManyField(to='mws_main.service')),
            ],
            options={
                'permissions': [('view_admin_developer', 'Can view detailed information of a developer')],
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('services_acq', models.ManyToManyField(to='mws_main.service')),
            ],
            options={
                'permissions': [('view_admin_client', 'Can view detailed information of a client')],
            },
            bases=('auth.user',),
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='VersionEntry',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('version', models.CharField(max_length=25)),
                ('update_date', models.DateField(auto_now_add=True)),
                ('changes', mws_main.models.DescriptionField(verbose_name='changes description')),
                ('package', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='mws_main.package')),
            ],
        ),
    ]
